name: Auto-Update Laravel Installer Image

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]
    schedule:
        - cron: "0 * * * *" # Every hour

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    check-and-build:
        runs-on: ubuntu-latest
        permissions:
            contents: write # For creating releases
            packages: write # For pushing to GHCR

        outputs:
            should_push: ${{ steps.version-check.outputs.should_push }}
            version: ${{ steps.laravel-version.outputs.version }}

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Get Laravel Installer Version
              id: laravel-version
              run: |
                  # Get the latest Laravel installer version and release info
                  LATEST_RELEASE=$(curl -s https://api.github.com/repos/laravel/installer/releases/latest)
                  VERSION=$(echo "$LATEST_RELEASE" | jq -r '.tag_name' | sed 's/^v//')
                  RELEASE_BODY=$(echo "$LATEST_RELEASE" | jq -r '.body')
                  RELEASE_URL="https://github.com/laravel/installer/releases/tag/v${VERSION}"

                  echo "version=$VERSION" >> $GITHUB_OUTPUT
                  echo "release_body<<EOF" >> $GITHUB_OUTPUT
                  echo "$RELEASE_BODY" >> $GITHUB_OUTPUT
                  echo "EOF" >> $GITHUB_OUTPUT
                  echo "release_url=$RELEASE_URL" >> $GITHUB_OUTPUT

                  echo "Laravel Installer Version: $VERSION"

            - name: Check if version already exists
              id: version-check
              run: |
                  # Check if tag exists in GHCR using Docker manifest
                  if docker manifest inspect ghcr.io/${{ github.repository }}:${{ steps.laravel-version.outputs.version }} >/dev/null 2>&1; then
                    echo "Version ${{ steps.laravel-version.outputs.version }} already exists in GHCR"
                    echo "should_push=false" >> $GITHUB_OUTPUT
                  else
                    echo "New version ${{ steps.laravel-version.outputs.version }} detected"
                    echo "should_push=true" >> $GITHUB_OUTPUT
                  fi

                  # Always push on manual push to main branch
                  if [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" == "refs/heads/main" ]]; then
                    echo "Manual push to main - forcing push"
                    echo "should_push=true" >> $GITHUB_OUTPUT
                  fi

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log in to Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Extract metadata
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
                  tags: |
                      type=raw,value=latest,enable=${{ steps.version-check.outputs.should_push == 'true' && github.event_name != 'pull_request' }}
                      type=raw,value=${{ steps.laravel-version.outputs.version }},enable=${{ steps.version-check.outputs.should_push == 'true' && github.event_name != 'pull_request' }}
                      type=raw,value=v${{ steps.laravel-version.outputs.version }},enable=${{ steps.version-check.outputs.should_push == 'true' && github.event_name != 'pull_request' }}
                      type=ref,event=branch
                      type=ref,event=pr
                      type=sha

            - name: Build and push
              uses: docker/build-push-action@v5
              with:
                  context: .
                  push: ${{ steps.version-check.outputs.should_push == 'true' && github.event_name != 'pull_request' }}
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max

            - name: Check if GitHub release already exists
              id: release-check
              if: steps.version-check.outputs.should_push == 'true' && github.event_name != 'pull_request'
              run: |
                  if gh release view v${{ steps.laravel-version.outputs.version }} >/dev/null 2>&1; then
                    echo "Release v${{ steps.laravel-version.outputs.version }} already exists"
                    echo "should_create_release=false" >> $GITHUB_OUTPUT
                  else
                    echo "Release v${{ steps.laravel-version.outputs.version }} does not exist"
                    echo "should_create_release=true" >> $GITHUB_OUTPUT
                  fi
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Create GitHub Release
              if: steps.version-check.outputs.should_push == 'true' && github.event_name != 'pull_request' && steps.release-check.outputs.should_create_release == 'true'
              uses: softprops/action-gh-release@v2
              with:
                  tag_name: v${{ steps.laravel-version.outputs.version }}
                  name: Laravel Installer v${{ steps.laravel-version.outputs.version }}
                  body: |
                      ## ðŸ“¦ Laravel Installer v${{ steps.laravel-version.outputs.version }}

                      Automated build with Laravel Installer **v${{ steps.laravel-version.outputs.version }}**.

                      ### Laravel Installer Changes
                      ${{ steps.laravel-version.outputs.release_body }}

                      ### Usage
                      ```bash
                      docker pull ghcr.io/${{ github.repository }}:${{ steps.laravel-version.outputs.version }}
                      docker run --rm -v $(pwd):/app ghcr.io/${{ github.repository }}:${{ steps.laravel-version.outputs.version }} my-project
                      ```

                      ðŸ”— [View Laravel Installer Release](${{ steps.laravel-version.outputs.release_url }})

                      ---
                      *This image is automatically built and published when new Laravel Installer versions are released.*
                  draft: false
                  prerelease: false
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Build Summary
              run: |
                  echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
                  echo "- **Laravel Installer Version**: v${{ steps.laravel-version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
                  echo "- **Should Push**: ${{ steps.version-check.outputs.should_push }}" >> $GITHUB_STEP_SUMMARY
                  echo "- **Event**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
                  echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
                  if [[ "${{ steps.version-check.outputs.should_push }}" == "true" ]]; then
                    echo "- **Action**: Built and pushed new image" >> $GITHUB_STEP_SUMMARY
                  else
                    echo "- **Action**: Built only (version already exists)" >> $GITHUB_STEP_SUMMARY
                  fi
